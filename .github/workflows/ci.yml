name: Symfony Unit Tests
on: [push]
jobs:
  php-unit-and-functional-tests:
    runs-on: ubuntu-20.04
    services:
      mariadb:
        image: mariadb:10.6
        env:
          MARIADB_ROOT_PASSWORD: root
          MARIADB_DATABASE: testunit_sf
          MARIADB_USER: user
          MARIADB_PASSWORD: user
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['8.3']
    steps:
      # —— Setup Github actions —————————————————————————————————————————————
      # https://github.com/actions/checkout (official)
      - name: Git checkout placeholder-service
        uses: actions/checkout@v2
      # https://github.com/shivammathur/setup-php (community)
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: none
          tools: composer:v2
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo
        env:
          update: true
      - name: Setup Node 18
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      # —— Env ——————————————————————————————————————————————————————————————
      - name: Check PHP Version
        run: php -v
      - name: Check Node Version
        run: node -v
      - name: Setup environments variables
        run: cp .env.test .env.local
      # —— Composer —————————————————————————————————————————————————————————
      - name: Validate composer.json and composer.lock and Install Composer dependencies
        run: composer validate --no-check-publish && composer install
      # —— Symfony ——————————————————————————————————————————————————————————
      - name: Make bin/console executable
        run: chmod +x bin/console
      - name: Check the Symfony console
        run: bin/console -V
      # —— PHP-CS-Fixer —————————————————————————————————————————————————————
      # - name: PHP-CS-Fixer
      #  run: php vendor/bin/php-cs-fixer fix --diff --dry-run
      # —— PHPStan ——————————————————————————————————————————————————————————
      # - name: PHPStan Static Analysis
      #  run: vendor/bin/phpstan analyze --no-progress
      # —— Linters ——————————————————————————————————————————————————————————
      # - name: Check Twig template
      #  run: bin/console lint:twig templates
      # - name: Check yaml
      #  run: cd html && bin/console lint:yaml config
      # - name: Check container
      #  run: cd html && bin/console lint:container
      # —— Migrations ———————————————————————————————————————————————————————
      - name: Migrate
        run: bin/console doctrine:migrations:migrate --no-interaction
      - name: Force schema (doesn't work if not executed)
        run: bin/console doctrine:schema:update -n --force
      - name: Schema validate
        run: bin/console doctrine:schema:validate
      # —— Fixtures —————————————————————————————————————————————————————————
      # - name: Load fixtures
      #  run: bin/console doctrine:fixtures:load -n
      # —— FOS Js-routing ———————————————————————————————————————————————————
      # - name: Generate routes for js
      #  run: composer run fos
      # —— Webpack ——————————————————————————————————————————————————————————
      # - name: Yarn install
      #  run: yarn install
      # - name: Install webpack encore
      #  run: export NODE_OPTIONS=--openssl-legacy-provider; yarn encore production
      # —— Tests ————————————————————————————————————————————————————————————
      - name: PhpUnit
        run: vendor/bin/phpunit
